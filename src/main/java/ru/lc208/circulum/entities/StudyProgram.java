package ru.lc208.circulum.entities;// default package
// Generated 28 нояб. 2024 г., 21:40:16 by Hibernate Tools 6.2.8.Final


import jakarta.persistence.*;

import java.util.HashSet;
import java.util.Set;

/**
 * StudyProgram generated by hbm2java
 */
@Entity
@Table(name="study_program"
    ,schema="public"
)
public class StudyProgram  implements java.io.Serializable {
    public boolean equals(Object obj) {
        if(obj instanceof StudyProgram)
        {
            return this.id == ((StudyProgram)obj).id;
        }
        return false;
    }

     private int id;
     private Subject subject;
     private Speciality speciality;
     private String tasksTargets;
     private String requirments;
     private String discPlace;
     private Set<Gear> gears = new HashSet<>(0);
     private Set<Competition> competitions = new HashSet<>(0);
     private Set<Theme> themes = new HashSet<>(0);

    public StudyProgram() {
    }

    public StudyProgram(int id, Subject subject, Speciality speciality, String tasksTargets, String requirments, String discPlace, Set<Gear> gears, Set<Competition> competitions, Set<Theme> themes) {
       this.id = id;
       this.subject = subject;
       this.speciality = speciality;
       this.tasksTargets = tasksTargets;
       this.requirments = requirments;
       this.discPlace = discPlace;
       this.gears = gears;
       this.competitions = competitions;
       this.themes = themes;
    }

    @Id
    @Column(name="id", unique=true, nullable=false)
    @SequenceGenerator(name = "study_program", sequenceName = "study_program_id_seq", allocationSize = 1)
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "study_program")
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="sub_id", nullable=false)
    public Subject getSubject() {
        return this.subject;
    }
    
    public void setSubject(Subject subject) {
        this.subject = subject;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="spec_id", nullable=false)
    public Speciality getSpeciality() {
        return this.speciality;
    }
    
    public void setSpeciality(Speciality speciality) {
        this.speciality = speciality;
    }

    
    @Column(name="tasks_targets", nullable=false)
    public String getTasksTargets() {
        return this.tasksTargets;
    }
    
    public void setTasksTargets(String tasksTargets) {
        this.tasksTargets = tasksTargets;
    }

    
    @Column(name="requirments", nullable=false)
    public String getRequirments() {
        return this.requirments;
    }
    
    public void setRequirments(String requirments) {
        this.requirments = requirments;
    }

    
    @Column(name="disc_place", nullable=false)
    public String getDiscPlace() {
        return this.discPlace;
    }
    
    public void setDiscPlace(String discPlace) {
        this.discPlace = discPlace;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="program_gear", schema="public", joinColumns = { 
        @JoinColumn(name="program_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="gear_id", nullable=false, updatable=false) })
    public Set<Gear> getGears() {
        return this.gears;
    }
    
    public void setGears(Set<Gear> gears) {
        this.gears = gears;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="program_competition", schema="public", joinColumns = {
        @JoinColumn(name="program_id", nullable=false, updatable=false) }, inverseJoinColumns = {
        @JoinColumn(name="competition_id", nullable=false, updatable=false) })
    public Set<Competition> getCompetitions() {
        return this.competitions;
    }
    
    public void setCompetitions(Set<Competition> competitions) {
        this.competitions = competitions;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="program_theme", schema="public", joinColumns = { 
        @JoinColumn(name="program_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="theme_id", nullable=false, updatable=false) })
    public Set<Theme> getThemes() {
        return this.themes;
    }
    
    public void setThemes(Set<Theme> themes) {
        this.themes = themes;
    }


    @Override
    public String toString() {
        return speciality + " - " + subject;
    }
}


